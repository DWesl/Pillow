name: Test Cygwin

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        platform: ["x86", "x64"]

    defaults:
      run:
        shell: bash.exe --login --norc -eo pipefail -o igncr '{0}'
    env:
      CHERE_INVOKING: 1

    timeout-minutes: 30
    name: ${{ matrix.platform }}

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout Pillow
        uses: actions/checkout@v2

      - name: Set up Cygwin
        uses: egor-tensin/setup-cygwin@v3
        with:
          platform: ${{ matrix.platform }}
          packages: >-
            python38-cffi
            python38-devel
            python38-numpy
            python38-olefile
            python38-pip
            python3-pyqt5
            python38-setuptools
            python38-tkinter
            ghostscript
            libfreetype-devel
            libimagequant-devel
            libjpeg-devel
            liblcms2-devel
            libopenjp2-devel
            libraqm-devel
            libtiff-devel
            libwebp-devel
            libX11-xcb-devel
            subversion
            jpeg
            ImageMagick

      - name: Install Python dependencies
        run: |
          which python3.8
          python3.8 -m pip install pyroma pytest pytest-cov pytest-timeout
          cd $GITHUB_WORKSPACE
          pushd depends && ./install_extra_test_images.sh && popd

      - name: Build Pillow
        run: |
          cd $GITHUB_WORKSPACE
          CFLAGS="-coverage" python3.8 setup.py build_ext install
          
      - name: Rebase Pillow DLLs
        run: |
          cd $GITHUB_WORKSPACE
          /usr/bin/rebase --database --oblivious $(find /usr/{,local/}lib/python3.8/site-packages/ -name \*.dll)

      - name: Test Pillow
        run: |
          cd $GITHUB_WORKSPACE
          python3.8 selftest.py --installed
          python3.8 -c "from PIL import Image"
          python3.8 -m pytest -v --cov PIL --cov Tests --cov-report term --cov-report xml Tests

      - name: Upload coverage
        run: |
          cd $GITHUB_WORKSPACE
          python3.8 -m pip install codecov
          bash <(curl -s https://codecov.io/bash) -F GHA_Windows
        env:
          CODECOV_NAME: ${{ matrix.name }}

  success:
    needs: build
    runs-on: ubuntu-latest
    name: Cygwin Test Successful
    steps:
      - name: Success
        run: echo Cygwin Test Successful
