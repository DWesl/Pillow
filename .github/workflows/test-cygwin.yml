name: Test Cygwin

on:
  push:
    paths:
      - "!.github/**"
      - ".github/workflows/test-cygwin.yml"
      - "!docs/**"
      - ".ci/**"
      - "requirements.txt"
      - "src/**"
      - "Tests/**"
      - "setup.py"
  pull_request:
    paths:
      - "!.github/**"
      - ".github/workflows/test-cygwin.yml"
      - "!docs/**"
      - ".ci/**"
      - "requirements.txt"
      - "src/**"
      - "Tests/**"
      - "setup.py"
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-minor-version: [7, 8]
        architecture: ["x86", "x86_64"]

    timeout-minutes: 30

    name: Python 3.${{ matrix.python-minor-version }} ${{ matrix.architecture }}

    steps:
      - name: Fix line endings
        run: |
          git config --global core.autocrlf input

      - name: Checkout Pillow
        uses: actions/checkout@v2

      - name: Install Cygwin
        uses: cygwin/cygwin-install-action@v1
        with:
          platform: ${{ matrix.architecture }}
          packages: >
            ImageMagick jpeg python3${{ matrix.python-minor-version }}-cffi
            python3${{ matrix.python-minor-version }}-devel
            python3${{ matrix.python-minor-version }}-numpy
            python3${{ matrix.python-minor-version }}-sip
            python3${{ matrix.python-minor-version }}-tkinter ghostscript
            libfreetype-devel libimagequant-devel libjpeg-devel liblcms2-devel
            libopenjp2-devel libraqm-devel libtiff-devel libwebp-devel libxcb-devel
            libxcb-xinerama0 netpbm perl qt5-devel-tools xorg-server-extra zlib-devel

      - name: Add Lapack to PATH (x86)
        if: ${{ matrix.architecture }} == "x86"
        uses: egor-tensin/cleanup-path@v1
        with:
          dirs: 'C:\cygwin\bin;C:\cygwin\lib\lapack'

      - name: Add Lapack to PATH (x86_64)
        if: ${{ matrix.architecture }} == "x86_64"
        uses: egor-tensin/cleanup-path@v1
        with:
          dirs: 'C:\cygwin64\bin;C:\cygwin64\lib\lapack'

      - name: Build system information
        run: |
          bash.exe -c "python3 .github/workflows/system-info.py"

      - name: Install dependencies
        run: |
          bash.exe .ci/install.sh

      - name: Build
        run: |
          bash.exe .ci/build_cygwin.sh

      - name: Check imports
        run: |
          bash.exe -c "python3.${{ matrix.python-minor-version }} selftest.py"
          bash.exe -c "python3.${{ matrix.python-minor-version }} -c 'import numpy as np; print(np.__version__)'"

      - name: Test
        run: |
          bash.exe xvfb-run -s '-screen 0 1024x768x24' .ci/test.sh

      - name: Prepare to upload errors
        if: failure()
        run: |
          mkdir -p Tests/errors

      - name: Upload errors
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: errors
          path: Tests/errors

      - name: After success
        run: |
          bash.exe .ci/after_success.sh

      - name: Upload coverage
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
          flags: GHA_Cygwin
          name: Cygwin Python 3.${{ matrix.python-minor-version }} ${{ matrix.architecture }}

  success:
    needs: build
    runs-on: ubuntu-latest
    name: Cygwin Test Successful
    steps:
      - name: Success
        run: echo Cygwin Test Successful
